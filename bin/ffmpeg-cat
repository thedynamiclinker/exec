#!/usr/bin/env python

"""
ls *.mkv | sort | ffmpeg-cat -o file.mkv
"""

import os
import sys
import shutil
import argparse
import tempfile
parser = argparse.ArgumentParser()
parser.add_argument('files', nargs='*', default=[])
parser.add_argument('-o', '--outfile', default='ffmpeg-cat-output.mkv')
args = parser.parse_args(sys.argv[1:])

files = args.files
if not os.isatty(sys.stdin.fileno()):
    files += sys.stdin.read().splitlines()

# This tmp file name can't be in /tmp, ffmpeg wants it to be
# relative to the pathnames it contains, and it doesn't like
# absolute pathnames. Not sure why but, that's why the weird
# os.path.basename() call has to wrap tempfile.mktemp below.
tmp = os.path.basename(tempfile.mktemp())
file_list = '\n'.join([f"file '{file}'" for file in files])
with open(tmp, 'w') as fp:
    fp.write(file_list)

os.system(f"""ffmpeg -f concat -i {tmp!r} -c copy {args.outfile}""")
os.remove(tmp)
