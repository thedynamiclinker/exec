#!/usr/bin/env bash

# note: orgs can be treated as users, but not
# vice-versa, so this works for orgs as well

format='simple'
query="user/repos"      # if unspecified, default to current user

while [[ -n $1 ]]; do
    case $1 in
        -v|--verbose)   format="both";;
        -u|--urls)      format="urls";;
        -s|--simple)    format="simple";;
        -*)             echo "error: git repos: unrecognized option: $1" && exit 1;;
        *)              query="users/$1/repos";;
    esac
    shift
done

format_output() {
    if [[ $format == simple ]]; then
        jq -r '.[].full_name' 
    elif [[ $format == urls ]]; then
        jq -r '.[].clone_url' 
    elif [[ $format == both ]]; then
        jq -r '.[] | [.full_name, .clone_url] | @tsv' | column -t
    else
        echo "error: git repos: impossible situation reached"
        exit 1
    fi
}

filter_irrelevant() {
    if [[ $query == user/repos ]]; then
        self="$(gh api user --jq '.login')"
        jq -r --arg self "$self" '.[] | [select(.owner.login == $self or .owner.type == "Organization")]'
    else
        cat
    fi
}

gh api "$query" --paginate | filter_irrelevant | format_output
