#!/usr/bin/env python3

import os
import curses
import subprocess

def main(stdscr):
    # Initialize n
    n = 0

    # Hide the cursor
    curses.curs_set(0)

    # Get terminal dimensions
    height, width = stdscr.getmaxyx()

    # Calculate the width of each pane
    pane_width = width // 2

    while True:
        # Clear the screen
        stdscr.clear()

        # Get outputs
        commit = f'HEAD~{n}'
        log_output = subprocess.getoutput(f'git log -n 1 --color=always {commit}')
        ls_output = subprocess.getoutput(f'git -c core.quotepath=false ls-tree --name-only {commit}')

        # Split the outputs into lines
        log_lines = log_output.splitlines()
        ls_lines = ls_output.splitlines()

        # Display git log output in the left pane
        for idx, line in enumerate(log_lines):
            if idx < height - 1:
                stdscr.addstr(idx, 0, line[:pane_width - 1])

        # Display git ls output in the right pane
        for idx, line in enumerate(ls_lines):
            if idx < height - 1:
                stdscr.addstr(idx, pane_width + 1, line[:pane_width - 2])

        # Refresh the screen
        stdscr.refresh()

        # Wait for user input
        try:
            key = stdscr.getch()
        except KeyboardInterrupt:
            os.system('clear')
            break

        if key == ord('q'):
            break
        elif key == curses.KEY_ENTER or key in [10, 13]:
            n += 1
        else:
            pass  # Ignore other keys

curses.wrapper(main)
