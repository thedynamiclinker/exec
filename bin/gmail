#!/usr/bin/env python

# NOTE: If this is broken, delete TOKEN_PATH and run the script again.

"""
# The following steps are from here: https://developers.google.com/gmail/api/quickstart/python

Step 1: Turn on the Gmail API
Click the button on the page above to create a new Cloud
Platform project and automatically enable the Gmail API.
In resulting dialog click DOWNLOAD CLIENT CONFIGURATION
and save the file credentials.json to your working directory.

Step 2: pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib

Step 3: Set up the sample code.

Step 4: Run the sample code.
"""


import os
import sys
import pickle
from googleapiclient.discovery import build # package is called python-google-api-python-client on arch
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request

# If modifying these scopes, delete the file token.pickle.
SCOPES = ['https://www.googleapis.com/auth/gmail.readonly']

SECRET = os.getenv("SECRET")
if SECRET is None:
    print(f"Prefix not found: SECRET.")
    sys.exit(1)

TOKEN_PATH = f'{SECRET}/etc/gmail-token.pickle'
CREDENTIALS_PATH = f'{SECRET}/etc/gmail-credentials.json'

def get_number_of_unread_emails():

    """ Get number of unread emails """

    creds = None
    # The file token.pickle stores the user's access and refresh tokens,
    # and is created automatically when the authorization flow completes
    # for the first time.
    if os.path.exists(TOKEN_PATH):
        # print(TOKEN_PATH)
        with open(TOKEN_PATH, 'rb') as token:
            creds = pickle.load(token)
    # If there are no (valid) credentials available, let the user log in.
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file(
                CREDENTIALS_PATH,
                SCOPES,
            )
            creds = flow.run_local_server(port=0)
        # Save the credentials for the next run
        with open(TOKEN_PATH, 'wb') as token:
            pickle.dump(creds, token)

    service = build('gmail', 'v1', credentials=creds)

    # Call the Gmail API
    users = service.users()

    #results = users.labels().list(userId='me').execute()
    #labels = results.get('labels', [])

    messages = users.messages()
    query = messages.list(userId='me', q='is:unread', labelIds=['INBOX'])
    results = query.execute()
    unread = results.get('messages', [])

    uniq_unread = set(d['threadId'] for d in unread)

    num_unread = len(uniq_unread)

    return num_unread


if __name__ == '__main__':
    try:
        count = get_number_of_unread_emails()
    except:
        count = None

    if   count is None: print('Emails unknown')
    elif count == 1:    print(f'{count} new email')
    else:               print(f'{count} new emails')

