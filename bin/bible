#!/usr/bin/env python

import os
import re
import sys
import json
import random
import argparse
import requests

def parse_command_line(args):

    parser = argparse.ArgumentParser()

    parser.add_argument(
        "-a",
        "--all",
        action = 'store_true',
        help = "If set, print the whole bible."
    )

    parser.add_argument(
        "-f",
        "--file",
        type = str,
        default = os.path.join(os.getenv('HOME'), '.bible.txt'),
        help = "Bible file."
    )

    config = parser.parse_args(args)

    return config


def get_bible():
    url = 'http://www.gutenberg.org/ebooks/10.txt.utf-8'
    raw_lines = requests.get(url).content.decode().splitlines()
    lines = []

    i = 0
    while i < len(raw_lines):
        raw_line = raw_lines[i]
        line_chunks = []
        if re.match('^[0-9]+:[0-9]+.*', raw_line, re.I):
            line_chunks.append(raw_line)
            while raw_lines[i+1] != '':
                i += 1
                raw_line = raw_lines[i]
                line_chunks.append(raw_line)
            line = ' '.join(line_chunks)
            lines.append(line)
        i += 1
    bible = '\n'.join(lines)
    with open('/tmp/bible.txt', 'w') as fp:
        fp.write(bible)

    bible = os.popen(r"""
        cat /tmp/bible.txt \
        | sed -r -z 's@([^\n])\n([^\n])@\1 \2@g' \
        | sed -r -z 's@[ ]+([0-9]+:[0-9]+)@\n\1@g'
    """).read()
    return bible


def main(args):

    config = parse_command_line(args)

    if os.path.exists(config.file):
        text = open(config.file, 'r').read()
    else:
        text = get_bible()
        with open(config.file, 'w') as fp:
            fp.write(text)

    if config.all:
        print(text)
    else:
        lines = text.splitlines()
        while not (random_line := random.choice(lines)).strip():
            continue
        print(random_line)


if __name__ == '__main__':

    main(sys.argv[1:])
